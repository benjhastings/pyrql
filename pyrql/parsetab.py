
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'BF3B2BE038BBF95D09E9D25412EEA106'
    
_lr_action_items = {'LPAREN':([0,1,7,11,16,18,19,20,21,23,25,27,28,29,43,],[1,1,18,21,21,1,1,1,1,1,1,-19,1,-20,1,]),'PLUS':([18,43,],[27,27,]),'SORT':([0,1,18,19,20,21,23,25,27,28,29,43,],[7,7,7,7,7,7,7,7,-19,7,-20,7,]),'AND':([2,4,6,8,9,10,11,12,13,14,15,16,24,26,30,33,34,35,36,38,39,42,44,45,48,49,],[-28,-23,-24,20,-21,-25,-26,-27,-22,-22,20,-26,-12,-11,20,20,-6,-9,20,-26,-4,20,-10,-8,-26,-5,]),'FCONST':([0,1,18,19,20,21,22,23,25,27,28,29,43,46,],[2,2,2,2,2,2,2,2,2,-19,2,-20,2,2,]),'BOOL_FALSE':([0,1,18,19,20,21,22,23,25,27,28,29,43,46,],[6,6,6,6,6,6,6,6,6,-19,6,-20,6,6,]),'BOOL_TRUE':([0,1,18,19,20,21,22,23,25,27,28,29,43,46,],[4,4,4,4,4,4,4,4,4,-19,4,-20,4,4,]),'MINUS':([18,43,],[29,29,]),'$end':([2,3,4,5,6,9,10,12,13,14,16,24,26,33,34,35,38,39,40,44,45,48,49,],[-28,-1,-23,0,-24,-21,-25,-27,-3,-22,-26,-12,-11,-7,-6,-9,-26,-4,-2,-10,-8,-26,-5,]),'RPAREN':([2,4,6,9,10,12,14,15,16,17,21,24,26,30,31,32,33,34,35,36,37,38,39,41,42,44,45,47,48,49,],[-28,-23,-24,-21,-25,-27,-22,24,-26,26,35,-12,-11,-18,-16,44,-7,-6,-9,-14,45,-26,-4,-13,-17,-10,-8,-15,-26,-5,]),'NULL':([0,1,18,19,20,21,22,23,25,27,28,29,43,46,],[10,10,10,10,10,10,10,10,10,-19,10,-20,10,10,]),'NAME':([0,1,18,19,20,21,22,23,25,27,28,29,43,46,],[11,16,16,16,16,16,38,11,16,-19,16,-20,16,48,]),'OR':([2,4,6,8,9,10,11,12,13,14,15,16,24,26,30,33,34,35,36,38,39,42,44,45,48,49,],[-28,-23,-24,19,-21,-25,-26,-27,-22,-22,19,-26,-12,-11,19,-7,-6,-9,19,-26,-4,19,-10,-8,-26,-5,]),'EQUALS':([11,16,38,],[22,22,46,]),'ICONST':([0,1,18,19,20,21,22,23,25,27,28,29,43,46,],[12,12,12,12,12,12,12,12,12,-19,12,-20,12,12,]),'COMMA':([2,4,6,9,10,12,13,14,15,16,24,26,30,31,33,34,35,36,38,39,42,44,45,48,49,],[-28,-23,-24,-21,-25,-27,23,-22,25,-26,-12,-11,-18,43,-7,-6,-9,25,-26,-4,-17,-10,-8,-26,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'calls':([0,23,],[3,40,]),'call':([0,1,18,19,20,21,23,25,28,43,],[13,14,14,14,14,14,13,14,14,14,]),'sort_arg':([18,43,],[31,31,]),'arglist':([1,21,25,],[17,37,41,]),'toplevel':([0,],[5,]),'sort_prefix':([18,43,],[28,28,]),'const':([0,1,18,19,20,21,22,23,25,28,43,46,],[9,9,9,9,9,9,39,9,9,9,9,49,]),'arg':([0,1,18,19,20,21,23,25,28,43,],[8,15,30,33,34,36,8,36,42,30,]),'sort_arglist':([18,43,],[32,47,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> toplevel","S'",1,None,None,None),
  ('toplevel -> calls','toplevel',1,'p_toplevel','parser.py',137),
  ('calls -> call COMMA calls','calls',3,'p_calls','parser.py',149),
  ('calls -> call','calls',1,'p_calls','parser.py',150),
  ('call -> NAME EQUALS const','call',3,'p_op_eq','parser.py',161),
  ('call -> NAME EQUALS NAME EQUALS const','call',5,'p_fiql_ops','parser.py',168),
  ('call -> arg AND arg','call',3,'p_op_and','parser.py',175),
  ('call -> arg OR arg','call',3,'p_op_or','parser.py',182),
  ('call -> NAME LPAREN arglist RPAREN','call',4,'p_generic_call','parser.py',189),
  ('call -> NAME LPAREN RPAREN','call',3,'p_generic_call','parser.py',190),
  ('call -> SORT LPAREN sort_arglist RPAREN','call',4,'p_sort_call','parser.py',200),
  ('arg -> LPAREN arglist RPAREN','arg',3,'p_argarray','parser.py',208),
  ('arg -> LPAREN arg RPAREN','arg',3,'p_paren_arg','parser.py',216),
  ('arglist -> arg COMMA arglist','arglist',3,'p_arglist','parser.py',223),
  ('arglist -> arg','arglist',1,'p_arglist','parser.py',224),
  ('sort_arglist -> sort_arg COMMA sort_arglist','sort_arglist',3,'p_sort_arglist','parser.py',234),
  ('sort_arglist -> sort_arg','sort_arglist',1,'p_sort_arglist','parser.py',235),
  ('sort_arg -> sort_prefix arg','sort_arg',2,'p_sort_arg','parser.py',245),
  ('sort_arg -> arg','sort_arg',1,'p_sort_arg','parser.py',246),
  ('sort_prefix -> PLUS','sort_prefix',1,'p_sort_prefix','parser.py',257),
  ('sort_prefix -> MINUS','sort_prefix',1,'p_sort_prefix','parser.py',258),
  ('arg -> const','arg',1,'p_arg','parser.py',265),
  ('arg -> call','arg',1,'p_arg','parser.py',266),
  ('const -> BOOL_TRUE','const',1,'p_true','parser.py',274),
  ('const -> BOOL_FALSE','const',1,'p_false','parser.py',282),
  ('const -> NULL','const',1,'p_null','parser.py',290),
  ('const -> NAME','const',1,'p_const','parser.py',298),
  ('const -> ICONST','const',1,'p_const','parser.py',299),
  ('const -> FCONST','const',1,'p_const','parser.py',300),
]
